{"ast":null,"code":"var _jsxFileName = \"/Users/namishkukreja/Documents/Programming/RowdyHacks2023/game/src/App.js\";\nimport React, { useRef, useEffect } from 'react';\nimport * as THREE from 'three';\nfunction App() {\n  var sceneRef = useRef(null);\n  useEffect(function () {\n    // Create the 3D scene\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    var renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    sceneRef.current.appendChild(renderer.domElement);\n    // Add objects to the scene\n    var geometry = new THREE.BoxGeometry();\n    var material = new THREE.MeshBasicMaterial({\n      color: 0x00ff00\n    });\n    var cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n    // Animate the scene\n    function animate() {\n      requestAnimationFrame(animate);\n      cube.rotation.x += 0.01;\n      cube.rotation.y += 0.01;\n      renderer.render(scene, camera);\n    }\n    animate();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: sceneRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  });\n}\nexport default App;","map":{"version":3,"names":["React","useRef","useEffect","THREE","App","sceneRef","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","setSize","current","appendChild","domElement","geometry","BoxGeometry","material","MeshBasicMaterial","color","cube","Mesh","add","animate","requestAnimationFrame","rotation","x","y","render","createElement","ref","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/namishkukreja/Documents/Programming/RowdyHacks2023/game/src/App.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport * as THREE from 'three';\nfunction App() {\n  const sceneRef = useRef(null);\n  useEffect(() => {\n    // Create the 3D scene\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    sceneRef.current.appendChild(renderer.domElement);\n    // Add objects to the scene\n    const geometry = new THREE.BoxGeometry();\n    const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n    const cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n    // Animate the scene\n    function animate() {\n      requestAnimationFrame(animate);\n      cube.rotation.x += 0.01;\n      cube.rotation.y += 0.01;\n      renderer.render(scene, camera);\n    }\n    animate();\n  }, []);\n  return (\n    <div ref={sceneRef} />\n  );\n}\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,GAAGA,CAAA,EAAG;EACb,IAAMC,QAAQ,GAAGJ,MAAM,CAAC,IAAI,CAAC;EAC7BC,SAAS,CAAC,YAAM;IACd;IACA,IAAMI,KAAK,GAAG,IAAIH,KAAK,CAACI,KAAK,EAAE;IAC/B,IAAMC,MAAM,GAAG,IAAIL,KAAK,CAACM,iBAAiB,CAAC,EAAE,EAAEC,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACE,WAAW,EAAE,GAAG,EAAE,IAAI,CAAC;IACjG,IAAMC,QAAQ,GAAG,IAAIV,KAAK,CAACW,aAAa,EAAE;IAC1CD,QAAQ,CAACE,OAAO,CAACL,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;IACvDP,QAAQ,CAACW,OAAO,CAACC,WAAW,CAACJ,QAAQ,CAACK,UAAU,CAAC;IACjD;IACA,IAAMC,QAAQ,GAAG,IAAIhB,KAAK,CAACiB,WAAW,EAAE;IACxC,IAAMC,QAAQ,GAAG,IAAIlB,KAAK,CAACmB,iBAAiB,CAAC;MAAEC,KAAK,EAAE;IAAS,CAAC,CAAC;IACjE,IAAMC,IAAI,GAAG,IAAIrB,KAAK,CAACsB,IAAI,CAACN,QAAQ,EAAEE,QAAQ,CAAC;IAC/Cf,KAAK,CAACoB,GAAG,CAACF,IAAI,CAAC;IACf;IACA,SAASG,OAAOA,CAAA,EAAG;MACjBC,qBAAqB,CAACD,OAAO,CAAC;MAC9BH,IAAI,CAACK,QAAQ,CAACC,CAAC,IAAI,IAAI;MACvBN,IAAI,CAACK,QAAQ,CAACE,CAAC,IAAI,IAAI;MACvBlB,QAAQ,CAACmB,MAAM,CAAC1B,KAAK,EAAEE,MAAM,CAAC;IAChC;IACAmB,OAAO,EAAE;EACX,CAAC,EAAE,EAAE,CAAC;EACN,oBACE3B,KAAA,CAAAiC,aAAA;IAAKC,GAAG,EAAE7B,QAAS;IAAA8B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG;AAE1B;AACA,eAAepC,GAAG"},"metadata":{},"sourceType":"module"}